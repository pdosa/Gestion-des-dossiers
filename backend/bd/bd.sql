-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    matricule serial NOT NULL,
    username character varying(150) NOT NULL,
    email character varying(150) NOT NULL,
    password character varying(255) NOT NULL,
    role_id integer,
    is_active boolean DEFAULT True,
    created_at timestamp with time zone DEFAULT current_timestamp,
    PRIMARY KEY (matricule)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    role_id serial NOT NULL,
    role_name character varying(50) NOT NULL,
    PRIMARY KEY (role_id)
);

CREATE TABLE IF NOT EXISTS public.permissions
(
    permission_id serial NOT NULL,
    permission_name character varying(150) NOT NULL,
    PRIMARY KEY (permission_id)
);

CREATE TABLE IF NOT EXISTS public.permissions_roles
(
    permissions_permission_id serial NOT NULL,
    roles_role_id serial NOT NULL
);

CREATE TABLE IF NOT EXISTS public.dossiers
(
    id_dossier serial NOT NULL,
    titre character varying(200) NOT NULL,
    description text,
    user_id integer,
    create_at timestamp with time zone DEFAULT current_timesdtamp,
    updated_at timestamp with time zone DEFAULT current_ttimestamp,
    PRIMARY KEY (id_dossier)
);

CREATE TABLE IF NOT EXISTS public.documents
(
    document_id serial NOT NULL,
    dossier_id integer NOT NULL,
    file_name character varying(255) NOT NULL,
    file_path character varying(255) NOT NULL,
    upload_at timestamp with time zone DEFAULT current_timestamp,
    PRIMARY KEY (document_id)
);

CREATE TABLE IF NOT EXISTS public.notificatons
(
    id_notif serial NOT NULL,
    user_id integer,
    message text NOT NULL,
    is_read boolean DEFAULT FALSE,
    sent_at timestamp with time zone DEFAULT current_timestamp,
    PRIMARY KEY (id_notif)
);

ALTER TABLE IF EXISTS public.users
    ADD FOREIGN KEY (role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE SET NULL
    ON DELETE SET NULL
    NOT VALID;


ALTER TABLE IF EXISTS public.permissions_roles
    ADD FOREIGN KEY (permissions_permission_id)
    REFERENCES public.permissions (permission_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.permissions_roles
    ADD FOREIGN KEY (roles_role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.dossiers
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (matricule) MATCH SIMPLE
    ON UPDATE SET NULL
    ON DELETE SET NULL
    NOT VALID;


ALTER TABLE IF EXISTS public.documents
    ADD FOREIGN KEY (dossier_id)
    REFERENCES public.dossiers (id_dossier) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.notificatons
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (matricule) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

END;